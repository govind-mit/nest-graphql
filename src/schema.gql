# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  first_name: String!
  last_name: String!
  email: String!
  phone: String!
  password: String!
  role_id: Int!
  auth_code: Int
  is_verified: Int!
  status: Int!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Email_Template {
  id: Int!
  subject: String!
  email_action: String!
  content: String
  created_at: DateTime!
  updated_at: DateTime!
}

type SuccessResponse {
  message: String
  status: Float
  token: String
}

type Role {
  id: Int!
  role_name: String!
}

type Availability {
  id: Int!
  userId: Int!
  key: String!
  value: JSONObject!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type GetAvailabilityResponce {
  message: String!
  status: Int!
  values: String!
}

type Option {
  id: Int!
  option_key: String!
  option_value: JSONObject!
}

type Schedule {
  id: Int!
  user_id: Int!
  date: DateTime!
  start_time: String!
  end_time: String!
  type: String!
  status: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Schedule_Order {
  id: Int!
  schedule_id: Int!
  user_id: Int!
  transaction_id: String!
  amount: Float!
  payment_date: DateTime!
  created_at: DateTime!
  updated_at: DateTime!
  status: String!
}

type User_Payment {
  id: Int!
  user_id: Int!
  customer_id: String!
  payment_profile_id: String!
}

type User_Payment_Option {
  id: Int!
  user_payment_id: String!
  option_name: String!
  option_value: JSONObject!
}

type Query {
  generateAuthorizationToken: SuccessResponse!
  getRoleById(id: Int!): Role
  getRoles: [Role!]!
  getUserById(id: Int!): User
  getUsers: [User!]!
  getAvailabilityById(userId: Int!): GetAvailabilityResponce!
  getOptions: [Option!]!
  getPaymentDetails(cs_test_key: String!): String!
  getEmailTemplates: [Email_Template!]!
  getEmailTemplateByid(id: Int!): Email_Template!
  getEmailTemplateByEmailAction(email_action: String!): Email_Template!
  getSchedulesByUserId(userId: Int!): [Schedule!]!
  getScheduleDetailsById(id: Int!): [Schedule!]!
  getDashboardData: String!
  getDashboardDataByUserId(id: Int!): String!
}

type Mutation {
  login(userLoginData: UserLoginInput!): SuccessResponse!
  forgotPassword(userEmail: String!): String!
  verifyOtp(verifyOtpData: VerifyOtpInput!): SuccessResponse!
  resetpasssword(resetPasswordInput: ResetPasswordInput!): String!
  createRole(createRoleData: CreateRoleInput!): Role!
  updateRole(updateRoleData: CreateRoleInput!): Role!
  createUser(createUserData: CreateUserInput!): User!
  updateUser(updateUserData: UpdateUserInput!): User!
  createAvalibility(createAvailabilityData: CreateAvailabilityInput!): Availability!
  updateAvailability(updateAvalibilityData: CreateAvailabilityInput!): Availability!
  createOption(createOptionData: CreateOptionInput!): Option!
  updateOption(updateOptionData: CreateOptionInput!): Option!
  createOrder(createOrderData: CreateOrderInput!): Schedule_Order!
  updateOrder(updateOrderData: UpdateOrderInput!): Schedule_Order!
  createpaymentLink(createPaymentData: CreatePaymentInput!): String!
  createUserPayment(createPaymentData: CreateUserPaymentInput!): User_Payment!
  createUserPaymentOptions(createPaymentOptionData: CreateUserPaymentOptionInput!): User_Payment_Option!
  updateEmailTemplate(updateEmailTemplateData: updateEmailTemplateInput!): Email_Template!
  createSchedule(createScheduleData: CreateScheduleInput!): Schedule!
  updateScheduleByIdandUserId(updateScheduleData: CreateScheduleInput!): Schedule!
}

input UserLoginInput {
  email: String!
  password: String!
}

input VerifyOtpInput {
  email: String!
  otp: Float!
}

input ResetPasswordInput {
  token: String!
  password: String!
}

input CreateRoleInput {
  id: Float
  role_name: String!
}

input CreateUserInput {
  first_name: String!
  last_name: String!
  email: String!
  phone: String!
  password: String!
  role_id: Int!
  status: Int! = 0
  is_verified: Int! = 0
}

input UpdateUserInput {
  id: Float!
  first_name: String!
  last_name: String!
  email: String!
  phone: String!
  password: String
}

input CreateAvailabilityInput {
  key: String!
  value: JSONObject!
}

input CreateOptionInput {
  option_key: String!
  option_value: JSONObject!
}

input CreateOrderInput {
  schedule_id: Int!
  user_id: Int!
  amount: Float!
  payment_date: DateTime
}

input UpdateOrderInput {
  order_id: Int!
  transaction_id: String!
  status: String!
}

input CreatePaymentInput {
  product_name: String!
  amount: Float!
  customer_name: String!
  customer_email: String!
}

input CreateUserPaymentInput {
  user_id: Float!
  customer_id: String!
  payment_profile_id: String!
}

input CreateUserPaymentOptionInput {
  user_payment_id: String!
  option_name: String!
  option_value: JSONObject!
}

input updateEmailTemplateInput {
  id: Int!
  subject: String!
  email_action: String!
  content: String!
}

input CreateScheduleInput {
  user_id: Int!
  schedule_id: Float
  date: DateTime!
  start_time: String!
  end_time: String!
  type: String!
  status: String
}